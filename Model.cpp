#include <iostream>
#define GLEW_STATIC
#include <GL/glew.h>
#include <GLFW/glfw3.h>
#include <glm/glm.hpp>
#include <glm/gtc/matrix_transform.hpp>
#include <glm/gtc/type_ptr.hpp>
#include "Shader.h"
#include <math.h>

//ширина экрана
const GLuint W_WIDTH = 1920;
//высота экрана
const GLuint W_HEIGHT = 1080;

//привязка вершинных атрибутов
void bindVertexAttr();

int main() {
	//иницализация GLFW
	glfwInit();

	//отключение изменения размера окна
	glfwWindowHint(GLFW_RESIZABLE, GL_FALSE);

	//создание окна
	GLFWwindow* window = glfwCreateWindow(W_WIDTH, W_HEIGHT, "Lab1", nullptr, nullptr);

	//отображение содержания окна
	glfwMakeContextCurrent(window);

	//инициализация GLEW
	glewInit();

	//ширина отрисовываемого окна
	int width;
	//высота отрисовываемого окна
	int height;
	//передача размеров окна
	glfwGetFramebufferSize(window, &width, &height);

	//область отрисовки
	glViewport(0, 0, width, height);

	//создание вершинного и фрагментного шейдеров
	Shader shader("vertex.txt", "fragment.txt");

	GLfloat tableVertices[] = {
		//вершины							//цвета
		//стол
		//поверхность стола
		-1.5f, 1.0f, -0.5f,					0.3f, 0.1f, 0.0f,
		-1.5f, 0.5f, -0.5f,					0.5f, 0.3f, 0.2f,
		-0.7f, 1.0f, -0.5f,					0.9f, 0.7f, 0.6f,

		-0.7f, 0.5f, -0.5f,					0.9f, 0.7f, 0.6f,
		-0.7f, 1.0f, -0.5f,					0.9f, 0.7f, 0.6f,
		-1.5f, 0.5f, -0.5f,					0.5f, 0.3f, 0.2f,

		-1.5f, 0.5f, -0.5f,					0.3f, 0.1f, 0.0f,
		-0.7f, 0.5f, -0.5f,					0.3f, 0.1f, 0.0f,
		-0.7f, 0.5f, -0.55f,				0.3f, 0.1f, 0.0f,

		-0.7f, 0.5f, -0.55f,				0.3f, 0.1f, 0.0f,
		-1.5f, 0.5f, -0.55f,				0.3f, 0.1f, 0.0f,
		-1.5f, 0.5f, -0.5f,					0.3f, 0.1f, 0.0f,

		-0.7f, 0.5f, -0.5f,					0.5f, 0.3f, 0.2f,
		-0.7f, 0.5f, -0.55f,				0.5f, 0.3f, 0.2f,
		-0.7f, 1.0f, -0.5f,					0.9f, 0.7f, 0.6f,

		-0.7f, 1.0f, -0.5f,					0.9f, 0.7f, 0.6f,
		-0.7f, 1.0f, -0.55f,				0.9f, 0.7f, 0.6f,
		-0.7f, 0.5f, -0.55f,				0.5f, 0.3f, 0.2f,


		//деревянная часть
		//верхняя часть
		-1.5f, 0.5f, -0.55f,				0.3f, 0.1f, 0.0f,
		-1.45f, 0.5f, -0.55f,				0.3f, 0.1f, 0.0f,
		-1.45f, 0.5f, -1.0f,				0.3f, 0.1f, 0.0f,

		-1.45f, 0.5f, -1.0f,				0.3f, 0.1f, 0.0f,
		-1.5f, 0.5f, -1.0f,					0.3f, 0.1f, 0.0f,
		-1.5f, 0.5f, -0.55f,				0.3f, 0.1f, 0.0f,

		-1.5f, 1.0f, -0.55f,				0.3f, 0.1f, 0.0f,
		-1.45f, 1.0f, -0.55f,				0.3f, 0.1f, 0.0f,
		-1.45f, 1.0f, -1.0f,				0.3f, 0.1f, 0.0f,

		-1.45f, 1.0f, -1.0f,				0.3f, 0.1f, 0.0f,
		-1.5f, 1.0f, -1.0f,					0.3f, 0.1f, 0.0f,
		-1.5f, 1.0f, -0.55f,				0.3f, 0.1f, 0.0f,

		-1.45f, 0.5f, -0.55f,				0.2f, 0.0f, 0.0f,
		-1.45f, 1.0f, -0.55f,				0.2f, 0.0f, 0.0f,
		-1.45f, 0.5f, -1.0f,				0.2f, 0.0f, 0.0f,

		-1.45f, 1.0f, -0.55f,				0.2f, 0.0f, 0.0f,
		-1.45f, 1.0f, -1.0f,				0.2f, 0.0f, 0.0f,
		-1.45f, 0.5f, -1.0f,				0.2f, 0.0f, 0.0f,

		//нижняя опора
		-1.45f, 0.5f, -1.0f,				0.3f, 0.1f, 0.0f,
		-1.25f, 0.5f, -0.95f,				0.3f, 0.1f, 0.0f,
		-1.3f, 0.5f, -1.0f,					0.3f, 0.1f, 0.0f,

		-1.45f, 0.5f, -1.0f,				0.3f, 0.1f, 0.0f,
		-1.45f, 0.5f, -0.95f,				0.3f, 0.1f, 0.0f,
		-1.25f, 0.5f, -0.95f,				0.3f, 0.1f, 0.0f,

		-1.45f, 0.5f, -0.95f,				0.2f, 0.0f, 0.0f,
		-1.45f, 1.0f, -0.95f,				0.2f, 0.0f, 0.0f,
		-1.25f, 0.5f, -0.95f,				0.2f, 0.0f, 0.0f,

		-1.45f, 1.0f, -0.95f,				0.2f, 0.0f, 0.0f,
		-1.25f, 1.0f, -0.95f,				0.2f, 0.0f, 0.0f,
		-1.25f, 0.5f, -0.95f,				0.2f, 0.0f, 0.0f,


		//диагональная опора
		-1.25f, 0.5f, -0.95f,				0.3f, 0.1f, 0.0f,
		-1.3f, 0.5f, -0.95f,				0.3f, 0.1f, 0.0f,
		-0.9f, 0.5f, -0.55f,				0.3f, 0.1f, 0.0f,

		-0.9f, 0.5f, -0.55f,				0.3f, 0.1f, 0.0f,
		-0.95f, 0.5f, -0.55f,				0.3f, 0.1f, 0.0f,
		-1.3f, 0.5f, -0.95f,				0.3f, 0.1f, 0.0f,

		-1.25f, 0.5f, -0.95f,				0.2f, 0.0f, 0.0f,
		-1.25f, 1.0f, -0.95f,				0.2f, 0.0f, 0.0f,
		-0.9f, 0.5f, -0.55f,				0.2f, 0.0f, 0.0f,

		-0.9f, 0.5f, -0.55f,				0.2f, 0.0f, 0.0f,
		-0.9f, 1.0f, -0.55f,				0.2f, 0.0f, 0.0f,
		-1.25f, 1.0f, -0.95f,				0.2f, 0.0f, 0.0f,

		-1.3f, 0.5f, -0.95f,				0.2f, 0.0f, 0.0f,
		-1.3f, 1.0f, -0.95f,				0.2f, 0.0f, 0.0f,
		-0.95f, 0.5f, -0.55f,				0.2f, 0.0f, 0.0f,

		-0.95f, 0.5f, -0.55f,				0.2f, 0.0f, 0.0f,
		-0.95f, 1.0f, -0.55f,				0.2f, 0.0f, 0.0f,
		-1.3f, 1.0f, -0.95f,				0.2f, 0.0f, 0.0f,

		-1.25f, 0.6f, -0.95f,				0.2f, 0.0f, 0.0f,
		-1.3f, 0.6f, -1.0f,					0.2f, 0.0f, 0.0f,
		-1.25f, 0.9f, -0.95f,				0.2f, 0.0f, 0.0f,

		-1.25f, 0.9f, -0.95f,				0.2f, 0.0f, 0.0f,
		-1.3f, 0.9f, -1.0f,					0.2f, 0.0f, 0.0f,
		-1.3f, 0.6f, -1.0f,					0.2f, 0.0f, 0.0f,



		//опора
		//металлическая часть
		//верхняя часть
		-0.7f, 0.5f, -0.55f,				0.7f, 0.7f, 0.7f,
		-0.9f, 0.5f, -0.55f,				0.7f, 0.7f, 0.7f,
		-0.95f, 0.5f, -0.6f,				0.7f, 0.7f, 0.7f,

		-0.95f, 0.5f, -0.6f,				0.7f, 0.7f, 0.7f,
		-0.7f, 0.5f, -0.55f,				0.7f, 0.7f, 0.7f,
		-0.7f, 0.5f, -0.6f,					0.7f, 0.7f, 0.7f,

		-0.7f, 0.5f, -0.55f,				0.8f, 0.8f, 0.8f,
		-0.7f, 0.5f, -0.6f,					0.8f, 0.8f, 0.8f,
		-0.7f, 1.0f, -0.6f,					1.0f, 1.0f,	1.0f,

		-0.7f, 0.5f, -0.55f,				0.8f, 0.8f, 0.8f,
		-0.7f, 1.0f, -0.55f,				1.0f, 1.0f,	1.0f,
		-0.7f, 1.0f, -0.6f,					1.0f, 1.0f,	1.0f,


		//ближняя
		//вертикальная часть
		-0.7f, 0.5f, -0.6f,					0.7f, 0.7f, 0.7f,
		-0.75f, 0.5f, -0.6f,				0.7f, 0.7f, 0.7f,
		-0.75f, 0.5f, -1.0f,				0.7f, 0.7f, 0.7f,

		-0.75f, 0.5f, -1.0f,				0.7f, 0.7f, 0.7f,
		-0.7f, 0.5f, -1.0f,					0.7f, 0.7f, 0.7f,
		-0.7f, 0.5f, -0.6f,					0.7f, 0.7f, 0.7f,

		-0.7f, 0.5f, -1.0f,					0.8f, 0.8f, 0.8f,
		-0.7f, 0.6f, -1.0f,					0.8f, 0.8f, 0.8f,
		-0.7f, 0.5f, -0.6f,					0.8f, 0.8f, 0.8f,

		-0.7f, 0.6f, -1.0f,					0.8f, 0.8f, 0.8f,
		-0.7f, 0.6f, -0.6f,					0.8f, 0.8f, 0.8f,
		-0.7f, 0.5f, -0.6f,					0.8f, 0.8f, 0.8f,

		-0.75f, 0.5f, -1.0f,				0.8f, 0.8f, 0.8f,
		-0.75f, 0.6f, -1.0f,				0.8f, 0.8f, 0.8f,
		-0.75f, 0.5f, -0.6f,				0.8f, 0.8f, 0.8f,

		-0.75f, 0.6f, -1.0f,				0.8f, 0.8f, 0.8f,
		-0.75f, 0.6f, -0.6f,				0.8f, 0.8f, 0.8f,
		-0.75f, 0.5f, -0.6f,				0.8f, 0.8f, 0.8f,

		-0.7f, 0.6f, -0.6f,					0.7f, 0.7f, 0.7f,
		-0.75f, 0.6f, -0.6f,				0.8f, 0.8f, 0.8f,
		-0.75f, 0.6f, -1.0f,				0.8f, 0.8f, 0.8f,

		-0.75f, 0.6f, -1.0f,				0.8f, 0.8f, 0.8f,
		-0.7f, 0.6f, -1.0f,					0.7f, 0.7f, 0.7f,
		-0.7f, 0.6f, -0.6f,					0.7f, 0.7f, 0.7f,

		//низ опоры
		-0.75f, 0.5f, -1.0f,				0.7f, 0.7f, 0.7f,
		-0.75f, 0.5f, -0.95f,				0.7f, 0.7f, 0.7f,
		-1.3f, 0.5f, -1.0f,					0.7f, 0.7f, 0.7f,

		-1.3f, 0.5f, -1.0f,					0.7f, 0.7f, 0.7f,
		-1.25f, 0.5f, -0.95f,				0.7f, 0.7f, 0.7f,
		-0.75f, 0.5f, -0.95f,				0.7f, 0.7f, 0.7f,

		-1.25f, 0.5f, -0.95f,				0.5f, 0.5f, 0.5f,
		-1.25f, 0.6f, -0.95f,				0.5f, 0.5f, 0.5f,
		-0.75f, 0.5f, -0.95f,				0.5f, 0.5f, 0.5f,

		-0.75f, 0.5f, -0.95f,				0.5f, 0.5f, 0.5f,
		-0.75f, 0.6f, -0.95f,				0.5f, 0.5f, 0.5f,
		-1.25f, 0.6f, -0.95f,				0.5f, 0.5f, 0.5f,

		-0.75f, 0.6f, -1.0f,				0.8f, 0.8f, 0.8f,
		-0.75f, 0.6f, -0.95f,				0.8f, 0.8f, 0.8f,
		-1.3f, 0.6f, -1.0f,					0.3f, 0.3f, 0.3f,

		-1.3f, 0.6f, -1.0f,					0.3f, 0.3f, 0.3f,
		-1.25f, 0.6f, -0.95f,				0.3f, 0.3f, 0.3f,
		-0.75f, 0.6f, -0.95f,				0.8f, 0.8f, 0.8f,


		//дальняя
		//вертикальная часть
		-0.7f, 0.9f, -0.6f,					0.4f, 0.4f, 0.4f,
		-0.75f, 0.9f, -0.6f,				0.4f, 0.4f, 0.4f,
		-0.75f, 0.9f, -1.0f,				0.4f, 0.4f, 0.4f,

		-0.75f, 0.9f, -1.0f,				0.4f, 0.4f, 0.4f,
		-0.7f, 0.9f, -1.0f,					0.4f, 0.4f, 0.4f,
		-0.7f, 0.9f, -0.6f,					0.4f, 0.4f, 0.4f,

		-0.7f, 0.9f, -1.0f,					0.5f, 0.5f, 0.5f,
		-0.7f, 1.0f, -1.0f,					0.5f, 0.5f, 0.5f,
		-0.7f, 0.9f, -0.6f,					1.0f, 1.0f,	1.0f,

		-0.7f, 1.0f, -1.0f,					0.5f, 0.5f, 0.5f,
		-0.7f, 1.0f, -0.6f,					1.0f, 1.0f,	1.0f,
		-0.7f, 0.9f, -0.6f,					1.0f, 1.0f,	1.0f,

		//низ опоры
		-0.75f, 0.9f, -1.0f,				0.4f, 0.4f, 0.4f,
		-0.75f, 0.9f, -0.95f,				0.4f, 0.4f, 0.4f,
		-1.3f, 0.9f, -1.0f,					0.4f, 0.4f, 0.4f,

		-1.3f, 0.9f, -1.0f,					0.4f, 0.4f, 0.4f,
		-1.25f, 0.9f, -0.95f,				0.4f, 0.4f, 0.4f,
		-0.75f, 0.9f, -0.95f,				0.4f, 0.4f, 0.4f,

		-1.25f, 0.9f, -0.95f,				0.2f, 0.2f, 0.2f,
		-1.25f, 1.0f, -0.95f,				0.2f, 0.2f, 0.2f,
		-0.75f, 0.9f, -0.95f,				0.2f, 0.2f, 0.2f,

		-0.75f, 0.9f, -0.95f,				0.2f, 0.2f, 0.2f,
		-0.75f, 1.0f, -0.95f,				0.2f, 0.2f, 0.2f,
		-1.25f, 1.0f, -0.95f,				0.2f, 0.2f, 0.2f,
	};
	GLfloat shelfVertices1[] = {
		//тумба (дальняя)
		//внешняя часть (создание по часовой стрелке)
		1.5f, 0.2f, -0.3f,										1.0f, 0.8f, 0.4f,
		1.5f, 0.5f, -0.3f,										1.0f, 0.8f, 0.4f,
		1.2f, 0.2f, -0.3f,										1.0f, 0.8f, 0.4f,

		1.2f, 0.2f, -0.3f,										1.0f, 0.8f, 0.4f,
		1.2f, 0.5f, -0.3f,										1.0f, 0.8f, 0.4f,
		1.5f, 0.5f, -0.3f,										1.0f, 0.8f, 0.4f,

		1.2f, 0.2f, -0.3f,										0.7f, 0.5f, 0.1f,
		1.5f, 0.2f, -0.3f,										0.7f, 0.5f, 0.1f,
		1.5f, 0.05f, -0.3f - 0.15 * sqrt(3),					0.7f, 0.5f, 0.1f,

		1.5f, 0.05f, -0.3f - 0.15 * sqrt(3),					0.7f, 0.5f, 0.1f,
		1.2f, 0.05f, -0.3f - 0.15 * sqrt(3),					0.7f, 0.5f, 0.1f,
		1.2f, 0.2f, -0.3f,										0.7f, 0.5f, 0.1f,

		1.2f, 0.2f, -0.3f - 0.3f * sqrt(3),						0.6f, 0.4f, 0.0f,
		1.5f, 0.2f, -0.3f - 0.3f * sqrt(3),						0.6f, 0.4f, 0.0f,
		1.5f, 0.05f, -0.3f - 0.15 * sqrt(3),					0.6f, 0.4f, 0.0f,

		1.5f, 0.05f, -0.3f - 0.15 * sqrt(3),					0.6f, 0.4f, 0.0f,
		1.2f, 0.05f, -0.3f - 0.15 * sqrt(3),					0.6f, 0.4f, 0.0f,
		1.2f, 0.2f, -0.3f - 0.3f * sqrt(3),						0.6f, 0.4f, 0.0f,

		1.5f, 0.2f, -0.3f - 0.3f * sqrt(3),						0.4f, 0.2f, 0.0f,
		1.5f, 0.5f, -0.3f - 0.3f * sqrt(3),						0.4f, 0.2f, 0.0f,
		1.2f, 0.2f, -0.3f - 0.3f * sqrt(3),						0.4f, 0.2f, 0.0f,

		1.2f, 0.2f, -0.3f - 0.3f * sqrt(3),						0.4f, 0.2f, 0.0f,
		1.2f, 0.5f, -0.3f - 0.3f * sqrt(3),						0.4f, 0.2f, 0.0f,
		1.5f, 0.5f, -0.3f - 0.3f * sqrt(3),						0.4f, 0.2f, 0.0f,

		1.2f, 0.5f, -0.3f - 0.3f * sqrt(3),						0.7f, 0.5f, 0.1f,
		1.5f, 0.5f, -0.3f - 0.3f * sqrt(3),						0.7f, 0.5f, 0.1f,
		1.5f, 0.65f, -0.3f - 0.15f * sqrt(3),					0.7f, 0.5f, 0.1f,

		1.5f, 0.65f, -0.3f - 0.15f * sqrt(3),					0.7f, 0.5f, 0.1f,
		1.2f, 0.65f, -0.3f - 0.15f * sqrt(3),					0.7f, 0.5f, 0.1f,
		1.2f, 0.5f, -0.3f - 0.3f * sqrt(3),						0.7f, 0.5f, 0.1f,

		1.2f, 0.5f, -0.3f,										1.0f, 0.8f, 0.4f,
		1.5f, 0.5f, -0.3f,										1.0f, 0.8f, 0.4f,
		1.5f, 0.65f, -0.3f - 0.15f * sqrt(3),					0.8f, 0.6f, 0.2f,

		1.5f, 0.65f, -0.3f - 0.15f * sqrt(3),					0.8f, 0.6f, 0.2f,
		1.2f, 0.65f, -0.3f - 0.15f * sqrt(3),					0.8f, 0.6f, 0.2f,
		1.2f, 0.5f, -0.3f,										1.0f, 0.8f, 0.4f,

		//внутренняя часть (создание по часовой стрелке)
		1.5f, 0.25f, -0.35f,									0.5f, 0.3f, 0.0f,
		1.5f, 0.45f, -0.35f,									0.5f, 0.3f, 0.0f,
		1.2f, 0.25f, -0.35f,									0.5f, 0.3f, 0.0f,

		1.2f, 0.25f, -0.35f,									0.5f, 0.3f, 0.0f,
		1.2f, 0.45f, -0.35f,									0.5f, 0.3f, 0.0f,
		1.5f, 0.45f, -0.35f,									0.5f, 0.3f, 0.0f,

		1.2f, 0.25f, -0.35f,									0.7f, 0.5f, 0.1f,
		1.5f, 0.25f, -0.35f,									0.7f, 0.5f, 0.1f,
		1.5f, 0.2f - 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3), 	0.7f, 0.5f, 0.1f,

		1.5f, 0.2f - 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3),	0.7f, 0.5f, 0.1f,
		1.2f, 0.2f - 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3),	0.7f, 0.5f, 0.1f,
		1.2f, 0.25f, -0.35f,									0.7f, 0.5f, 0.1f,

		1.5f, 0.2f - 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3),	0.8f, 0.6f, 0.2f,
		1.2f, 0.2f - 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3),	0.8f, 0.6f, 0.2f,
		1.5f, 0.25f, -0.25f - 0.3f * sqrt(3),					0.8f, 0.6f, 0.2f,

		1.5f, 0.25f, -0.25f - 0.3f * sqrt(3),					0.8f, 0.6f, 0.2f,
		1.2f, 0.25f, -0.25f - 0.3f * sqrt(3),					0.8f, 0.6f, 0.2f,
		1.2f, 0.2f - 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3),	0.8f, 0.6f, 0.2f,

		1.5f, 0.25f, -0.25f - 0.3f * sqrt(3),					0.7f, 0.5f, 0.1f,
		1.5f, 0.45f, -0.25f - 0.3f * sqrt(3),					0.5f, 0.3f, 0.0f,
		1.2f, 0.25f, -0.25f - 0.3f * sqrt(3),					0.7f, 0.5f, 0.1f,

		1.2f, 0.25f, -0.25f - 0.3f * sqrt(3),					0.7f, 0.5f, 0.1f,
		1.2f, 0.45f, -0.25f - 0.3f * sqrt(3),					0.7f, 0.5f, 0.1f,
		1.5f, 0.45f, -0.25f - 0.3f * sqrt(3),					0.5f, 0.3f, 0.0f,

		1.5f, 0.5f + 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3),	0.5f, 0.3f, 0.0f,
		1.2f, 0.5f + 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3),	0.5f, 0.3f, 0.0f,
		1.5f, 0.45f, -0.25f - 0.3f * sqrt(3),					0.5f, 0.3f, 0.0f,

		1.5f, 0.45f, -0.25f - 0.3f * sqrt(3),					0.5f, 0.3f, 0.0f,
		1.2f, 0.45f, -0.25f - 0.3f * sqrt(3),					0.5f, 0.3f, 0.0f,
		1.2f, 0.5f + 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3),	0.5f, 0.3f, 0.0f,

		1.2f, 0.45f, -0.35f,									0.4f, 0.2f, 0.0f,
		1.5f, 0.45f, -0.35f,									0.4f, 0.2f, 0.0f,
		1.5f, 0.5f + 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3), 	0.4f, 0.2f, 0.0f,

		1.5f, 0.5f + 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3),	0.4f, 0.2f, 0.0f,
		1.2f, 0.5f + 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3),	0.4f, 0.2f, 0.0f,
		1.2f, 0.45f, -0.35f,									0.4f, 0.2f, 0.0f,

		//внешние грани
		1.2f, 0.2f, -0.3f,										1.0f, 1.0f, 1.0f,
		1.2f, 0.5f, -0.3f,										1.0f, 1.0f, 1.0f,
		1.2f, 0.45f, -0.35f,									1.0f, 1.0f, 1.0f,

		1.2f, 0.25f, -0.35f,									1.0f, 1.0f, 1.0f,
		1.2f, 0.2f, -0.3f,										1.0f, 1.0f, 1.0f,
		1.2f, 0.45f, -0.35f,									1.0f, 1.0f, 1.0f,

		1.2f, 0.25f, -0.35f,									1.0f, 1.0f, 1.0f,
		1.2f, 0.05f, -0.3f - 0.15 * sqrt(3),					0.8f, 0.8f, 0.8f,
		1.2f, 0.2f, -0.3f,										1.0f, 1.0f, 1.0f,

		1.2f, 0.05f, -0.3f - 0.15 * sqrt(3),					0.8f, 0.8f, 0.8f,
		1.2f, 0.2f - 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3), 	0.8f, 0.8f, 0.8f,
		1.2f, 0.25f, -0.35f,									1.0f, 1.0f, 1.0f,

		1.2f, 0.2f - 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3), 	0.8f, 0.8f, 0.8f,
		1.2f, 0.05f, -0.3f - 0.15 * sqrt(3),					0.8f, 0.8f, 0.8f,
		1.2f, 0.2f, -0.3f - 0.3f * sqrt(3),						0.7f, 0.7f, 0.7f,

		1.2f, 0.25f, -0.25f - 0.3f * sqrt(3),					0.7f, 0.7f, 0.7f,
		1.2f, 0.2f, -0.3f - 0.3f * sqrt(3),						0.7f, 0.7f, 0.7f,
		1.2f, 0.2f - 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3), 	0.8f, 0.8f, 0.8f,

		1.2f, 0.2f, -0.3f - 0.3f * sqrt(3),						0.7f, 0.7f, 0.7f,
		1.2f, 0.5f, -0.3f - 0.3f * sqrt(3),						0.8f, 0.8f, 0.8f,
		1.2f, 0.25f, -0.25f - 0.3f * sqrt(3),					0.7f, 0.7f, 0.7f,

		1.2f, 0.5f, -0.3f - 0.3f * sqrt(3),						0.8f, 0.8f, 0.8f,
		1.2f, 0.45f, -0.25f - 0.3f * sqrt(3),					0.8f, 0.8f, 0.8f,
		1.2f, 0.25f, -0.25f - 0.3f * sqrt(3),					0.7f, 0.7f, 0.7f,

		1.2f, 0.5f + 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3), 	0.9f, 0.9f, 0.9f,
		1.2f, 0.65f, -0.3f - 0.15 * sqrt(3),					0.9f, 0.9f, 0.9f,
		1.2f, 0.5f, -0.3f - 0.3f * sqrt(3),						0.8f, 0.8f, 0.8f,

		1.2f, 0.45f, -0.25f - 0.3f * sqrt(3),					0.8f, 0.8f, 0.8f,
		1.2f, 0.5f, -0.3f - 0.3f * sqrt(3),						0.8f, 0.8f, 0.8f,
		1.2f, 0.5f + 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3), 	0.9f, 0.9f, 0.9f,

		1.2f, 0.45f, -0.35f,									1.0f, 1.0f, 1.0f,
		1.2f, 0.65f, -0.3f - 0.15 * sqrt(3),					0.9f, 0.9f, 0.9f,
		1.2f, 0.5f, -0.3f,										1.0f, 1.0f, 1.0f,

		1.2f, 0.65f, -0.3f - 0.15 * sqrt(3),					0.9f, 0.9f, 0.9f,
		1.2f, 0.5f + 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3), 	0.9f, 0.9f, 0.9f,
		1.2f, 0.45f, -0.35f,									1.0f, 1.0f, 1.0f,
	};
	GLfloat shelfVertices2[] = {
		//тумба (ближняя)
		//внешняя часть (создание по часовой стрелке)
		1.5f, -0.7f, -0.3f,											0.8f, 0.6f, 0.2f,
		1.2f, -0.4f, -0.3f,											0.7f, 0.5f, 0.1f,
		1.2f, -0.7f, -0.3f,											1.0f, 0.8f, 0.4f,

		1.2f, -0.4f, -0.3f,											0.8f, 0.6f, 0.2f,
		1.5f, -0.7f, -0.3f,											0.7f, 0.5f, 0.1f,
		1.5f, -0.4f, -0.3f,											0.7f, 0.5f, 0.1f,

		1.2f, -0.7f, -0.3f,											0.7f, 0.5f, 0.1f,
		1.5f, -0.7f, -0.3f,											0.7f, 0.5f, 0.1f,
		1.5f, -0.85f, -0.3f - 0.15 * sqrt(3),						0.7f, 0.5f, 0.1f,

		1.5f, -0.85f, -0.3f - 0.15 * sqrt(3),						0.7f, 0.5f, 0.1f,
		1.2f, -0.85f, -0.3f - 0.15 * sqrt(3),						0.7f, 0.5f, 0.1f,
		1.2f, -0.7f, -0.3f,											0.7f, 0.5f, 0.1f,

		1.2f, -0.7f, -0.3f - 0.3f * sqrt(3),						0.6f, 0.4f, 0.0f,
		1.5f, -0.7f, -0.3f - 0.3f * sqrt(3),						0.6f, 0.4f, 0.0f,
		1.5f, -0.85f, -0.3f - 0.15 * sqrt(3),						0.6f, 0.4f, 0.0f,

		1.5f, -0.85f, -0.3f - 0.15 * sqrt(3),						0.6f, 0.4f, 0.0f,
		1.2f, -0.85f, -0.3f - 0.15 * sqrt(3),						0.6f, 0.4f, 0.0f,
		1.2f, -0.7f, -0.3f - 0.3f * sqrt(3),						0.6f, 0.4f, 0.0f,

		1.5f, -0.7f, -0.3f - 0.3f * sqrt(3),						0.4f, 0.2f, 0.0f,
		1.5f, -0.4f, -0.3f - 0.3f * sqrt(3),						0.4f, 0.2f, 0.0f,
		1.2f, -0.7f, -0.3f - 0.3f * sqrt(3),						0.4f, 0.2f, 0.0f,

		1.2f, -0.7f, -0.3f - 0.3f * sqrt(3),						0.4f, 0.2f, 0.0f,
		1.2f, -0.4f, -0.3f - 0.3f * sqrt(3),						0.4f, 0.2f, 0.0f,
		1.5f, -0.4f, -0.3f - 0.3f * sqrt(3),						0.4f, 0.2f, 0.0f,

		1.2f, -0.4f, -0.3f - 0.3f * sqrt(3),						0.7f, 0.5f, 0.1f,
		1.5f, -0.4f, -0.3f - 0.3f * sqrt(3),						0.7f, 0.5f, 0.1f,
		1.5f, -0.25f, -0.3f - 0.15f * sqrt(3),						0.7f, 0.5f, 0.1f,

		1.5f, -0.25f, -0.3f - 0.15f * sqrt(3),						0.7f, 0.5f, 0.1f,
		1.2f, -0.25f, -0.3f - 0.15f * sqrt(3),						0.7f, 0.5f, 0.1f,
		1.2f, -0.4f, -0.3f - 0.3f * sqrt(3),						0.7f, 0.5f, 0.1f,

		1.2f, -0.4f, -0.3f,											1.0f, 0.8f, 0.4f,
		1.5f, -0.4f, -0.3f,											1.0f, 0.8f, 0.4f,
		1.5f, -0.25f, -0.3f - 0.15f * sqrt(3),						0.8f, 0.6f, 0.2f,

		1.5f, -0.25f, -0.3f - 0.15f * sqrt(3),						0.8f, 0.6f, 0.2f,
		1.2f, -0.25f, -0.3f - 0.15f * sqrt(3),						0.8f, 0.6f, 0.2f,
		1.2f, -0.4f, -0.3f,											1.0f, 0.8f, 0.4f,

		//внутренняя часть (создание по часовой стрелке)
		1.5f, -0.65f, -0.35f,										0.5f, 0.3f, 0.0f,
		1.5f, -0.45f, -0.35f,										0.5f, 0.3f, 0.0f,
		1.2f, -0.65f, -0.35f,										0.5f, 0.3f, 0.0f,

		1.2f, -0.65f, -0.35f,										0.5f, 0.3f, 0.0f,
		1.2f, -0.45f, -0.35f,										0.5f, 0.3f, 0.0f,
		1.5f, -0.45f, -0.35f,										0.5f, 0.3f, 0.0f,

		1.2f, -0.65f, -0.35f,										0.7f, 0.5f, 0.1f,
		1.5f, -0.65f, -0.35f,										0.7f, 0.5f, 0.1f,
		1.5f, -0.7f - 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3), 	0.7f, 0.5f, 0.1f,

		1.5f, -0.7f - 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3),		0.7f, 0.5f, 0.1f,
		1.2f, -0.7f - 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3),		0.7f, 0.5f, 0.1f,
		1.2f, -0.65f, -0.35f,										0.7f, 0.5f, 0.1f,

		1.5f, -0.7f - 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3),		0.8f, 0.6f, 0.2f,
		1.2f, -0.7f - 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3),		0.8f, 0.6f, 0.2f,
		1.5f, -0.65f, -0.25f - 0.3f * sqrt(3),						0.8f, 0.6f, 0.2f,

		1.5f, -0.65f, -0.25f - 0.3f * sqrt(3),						0.8f, 0.6f, 0.2f,
		1.2f, -0.65f, -0.25f - 0.3f * sqrt(3),						0.8f, 0.6f, 0.2f,
		1.2f, -0.7f - 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3),		0.8f, 0.6f, 0.2f,

		1.5f, -0.65f, -0.25f - 0.3f * sqrt(3),						0.7f, 0.5f, 0.1f,
		1.5f, -0.45f, -0.25f - 0.3f * sqrt(3),						0.5f, 0.3f, 0.0f,
		1.2f, -0.65f, -0.25f - 0.3f * sqrt(3),						0.7f, 0.5f, 0.1f,

		1.2f, -0.65f, -0.25f - 0.3f * sqrt(3),						0.7f, 0.5f, 0.1f,
		1.2f, -0.45f, -0.25f - 0.3f * sqrt(3),						0.7f, 0.5f, 0.1f,
		1.5f, -0.45f, -0.25f - 0.3f * sqrt(3),						0.5f, 0.3f, 0.0f,

		1.5f, -0.4f + 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3),		0.5f, 0.3f, 0.0f,
		1.2f, -0.4f + 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3),		0.5f, 0.3f, 0.0f,
		1.5f, -0.45f, -0.25f - 0.3f * sqrt(3),						0.5f, 0.3f, 0.0f,

		1.5f, -0.45f, -0.25f - 0.3f * sqrt(3),						0.5f, 0.3f, 0.0f,
		1.2f, -0.45f, -0.25f - 0.3f * sqrt(3),						0.5f, 0.3f, 0.0f,
		1.2f, -0.4f + 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3),		0.5f, 0.3f, 0.0f,

		1.2f, -0.45f, -0.35f,										0.4f, 0.2f, 0.0f,
		1.5f, -0.45f, -0.35f,										0.4f, 0.2f, 0.0f,
		1.5f, -0.4f + 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3), 	0.4f, 0.2f, 0.0f,

		1.5f, -0.4f + 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3),		0.4f, 0.2f, 0.0f,
		1.2f, -0.4f + 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3),		0.4f, 0.2f, 0.0f,
		1.2f, -0.45f, -0.35f,										0.4f, 0.2f, 0.0f,

		//внешние грани
		1.2f, -0.7f, -0.3f,											0.9f, 0.9f, 0.9f,
		1.2f, -0.4f, -0.3f,											1.0f, 1.0f, 1.0f,
		1.2f, -0.45f, -0.35f,										1.0f, 1.0f, 1.0f,

		1.2f, -0.65f, -0.35f,										0.9f, 0.9f, 0.9f,
		1.2f, -0.7f, -0.3f,											0.9f, 0.9f, 0.9f,
		1.2f, -0.45f, -0.35f,										1.0f, 1.0f, 1.0f,

		1.2f, -0.65f, -0.35f,										0.9f, 0.9f, 0.9f,
		1.2f, -0.85f, -0.3f - 0.15 * sqrt(3),						0.8f, 0.8f, 0.8f,
		1.2f, -0.7f, -0.3f,											0.9f, 0.9f, 0.9f,

		1.2f, -0.85f, -0.3f - 0.15 * sqrt(3),						0.8f, 0.8f, 0.8f,
		1.2f, -0.7f - 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3), 	0.8f, 0.8f, 0.8f,
		1.2f, -0.65f, -0.35f,										0.9f, 0.9f, 0.9f,

		1.2f, -0.7f - 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3), 	0.8f, 0.8f, 0.8f,
		1.2f, -0.85f, -0.3f - 0.15 * sqrt(3),						0.8f, 0.8f, 0.8f,
		1.2f, -0.7f, -0.3f - 0.3f * sqrt(3),						0.7f, 0.7f, 0.7f,

		1.2f, -0.65f, -0.25f - 0.3f * sqrt(3),						0.7f, 0.7f, 0.7f,
		1.2f, -0.7f, -0.3f - 0.3f * sqrt(3),						0.7f, 0.7f, 0.7f,
		1.2f, -0.7f - 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3), 	0.8f, 0.8f, 0.8f,

		1.2f, -0.7f, -0.3f - 0.3f * sqrt(3),						0.7f, 0.7f, 0.7f,
		1.2f, -0.4f, -0.3f - 0.3f * sqrt(3),						0.8f, 0.8f, 0.8f,
		1.2f, -0.65f, -0.25f - 0.3f * sqrt(3),						0.7f, 0.7f, 0.7f,

		1.2f, -0.4f, -0.3f - 0.3f * sqrt(3),						0.8f, 0.8f, 0.8f,
		1.2f, -0.45f, -0.25f - 0.3f * sqrt(3),						0.8f, 0.8f, 0.8f,
		1.2f, -0.65f, -0.25f - 0.3f * sqrt(3),						0.7f, 0.7f, 0.7f,

		1.2f, -0.4f + 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3), 	0.9f, 0.9f, 0.9f,
		1.2f, -0.25f, -0.3f - 0.15 * sqrt(3),						0.9f, 0.9f, 0.9f,
		1.2f, -0.4f, -0.3f - 0.3f * sqrt(3),						0.8f, 0.8f, 0.8f,

		1.2f, -0.45f, -0.25f - 0.3f * sqrt(3),						0.8f, 0.8f, 0.8f,
		1.2f, -0.4f, -0.3f - 0.3f * sqrt(3),						0.8f, 0.8f, 0.8f,
		1.2f, -0.4f + 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3), 	0.9f, 0.9f, 0.9f,

		1.2f, -0.45f, -0.35f,										1.0f, 1.0f, 1.0f,
		1.2f, -0.25f, -0.3f - 0.15 * sqrt(3),						0.9f, 0.9f, 0.9f,
		1.2f, -0.4f, -0.3f,											1.0f, 1.0f, 1.0f,

		1.2f, -0.25f, -0.3f - 0.15 * sqrt(3),						0.9f, 0.9f, 0.9f,
		1.2f, -0.4f + 0.05f * sqrt(2), -0.3f - 0.15f * sqrt(3), 	0.9f, 0.9f, 0.9f,
		1.2f, -0.45f, -0.35f,										1.0f, 1.0f, 1.0f,
	};
	GLfloat shelfVertices3[] = {
		//тумба (верхняя)
		//внешняя часть (создание по часовой стрелке)
		1.5f, -0.25f, -0.3f + 0.15 * sqrt(3),					0.8f, 0.6f, 0.2f,
		1.2f, -0.25f, -0.3f + 0.15 * sqrt(3),					0.8f, 0.6f, 0.2f,
		1.5f, 0.05f, -0.3f + 0.15 * sqrt(3),					1.0f, 0.8f, 0.4f,

		1.2f, -0.25f, -0.3f + 0.15 * sqrt(3),					0.8f, 0.6f, 0.2f,
		1.2f, 0.05f, -0.3f + 0.15 * sqrt(3),					1.0f, 0.8f, 0.4f,
		1.5f, 0.05f, -0.3f + 0.15 * sqrt(3),					1.0f, 0.8f, 0.4f,

		1.2f, -0.25f, -0.3f + 0.15 * sqrt(3),					0.7f, 0.5f, 0.1f,
		1.5f, -0.25f, -0.3f + 0.15 * sqrt(3),					0.7f, 0.5f, 0.1f,
		1.5f, -0.4f, -0.3f,										0.7f, 0.5f, 0.1f,

		1.5f, -0.4f, -0.3f,										0.7f, 0.5f, 0.1f,
		1.2f, -0.4f, -0.3f,										0.7f, 0.5f, 0.1f,
		1.2f, -0.25f, -0.3f + 0.15 * sqrt(3),					0.7f, 0.5f, 0.1f,

		1.2f, -0.25f, -0.3f - 0.15 * sqrt(3),					0.6f, 0.4f, 0.0f,
		1.5f, -0.25f, -0.3f - 0.15 * sqrt(3),					0.6f, 0.4f, 0.0f,
		1.5f, -0.4f, -0.3f,										0.6f, 0.4f, 0.0f,

		1.5f, -0.4f, -0.3f,										0.6f, 0.4f, 0.0f,
		1.2f, -0.4f, -0.3f,										0.6f, 0.4f, 0.0f,
		1.2f, -0.25f, -0.3f - 0.15 * sqrt(3),					0.6f, 0.4f, 0.0f,

		1.5f, -0.25f, -0.3f - 0.15f * sqrt(3),					0.4f, 0.2f, 0.0f,
		1.5f, 0.05f, -0.3f - 0.15f * sqrt(3),					0.4f, 0.2f, 0.0f,
		1.2f, -0.25f, -0.3f - 0.15f * sqrt(3),					0.4f, 0.2f, 0.0f,

		1.2f, -0.25f, -0.3f - 0.15f * sqrt(3),					0.4f, 0.2f, 0.0f,
		1.2f, 0.05f, -0.3f - 0.15f * sqrt(3),					0.4f, 0.2f, 0.0f,
		1.5f, 0.05f, -0.3f - 0.15f * sqrt(3),					0.4f, 0.2f, 0.0f,

		1.2f, 0.05f, -0.3f - 0.15f * sqrt(3),					0.7f, 0.5f, 0.1f,
		1.5f, 0.05f, -0.3f - 0.15f * sqrt(3),					0.7f, 0.5f, 0.1f,
		1.5f, 0.2f, -0.3f,										0.7f, 0.5f, 0.1f,

		1.5f, 0.2f, -0.3f,										0.7f, 0.5f, 0.1f,
		1.2f, 0.2f, -0.3f,										0.7f, 0.5f, 0.1f,
		1.2f, 0.05f, -0.3f - 0.15f * sqrt(3),					0.7f, 0.5f, 0.1f,

		1.2f, 0.05f, -0.3f + 0.15f * sqrt(3),					1.0f, 0.8f, 0.4f,
		1.5f, 0.05f, -0.3f + 0.15f * sqrt(3),					1.0f, 0.8f, 0.4f,
		1.5f, 0.2f, -0.3f,										1.0f, 0.8f, 0.4f,

		1.5f, 0.2f, -0.3f,										1.0f, 0.8f, 0.4f,
		1.2f, 0.2f, -0.3f,										1.0f, 0.8f, 0.4f,
		1.2f, 0.05f, -0.3f + 0.15f * sqrt(3),					1.0f, 0.8f, 0.4f,

		//внутренняя часть (создание по часовой стрелке)
		1.5f, -0.2f, -0.35f + 0.15f * sqrt(3),					0.5f, 0.3f, 0.0f,
		1.5f, 0.0f, -0.35f + 0.15f * sqrt(3),					0.5f, 0.3f, 0.0f,
		1.2f, -0.2f, -0.35f + 0.15f * sqrt(3),					0.5f, 0.3f, 0.0f,

		1.2f, -0.2f, -0.35f + 0.15f * sqrt(3),					0.5f, 0.3f, 0.0f,
		1.2f, 0.0f, -0.35f + 0.15f * sqrt(3),					0.5f, 0.3f, 0.0f,
		1.5f, 0.0f, -0.35f + 0.15f * sqrt(3),					0.5f, 0.3f, 0.0f,

		1.2f, -0.2f, -0.35f + 0.15f * sqrt(3),					0.7f, 0.5f, 0.1f,
		1.5f, -0.2f, -0.35f + 0.15f * sqrt(3),					0.7f, 0.5f, 0.1f,
		1.5f, -0.25f - 0.05f * sqrt(2), -0.3f, 					0.7f, 0.5f, 0.1f,

		1.5f, -0.25f - 0.05f * sqrt(2), -0.3f,					0.7f, 0.5f, 0.1f,
		1.2f, -0.25f - 0.05f * sqrt(2), -0.3f,					0.7f, 0.5f, 0.1f,
		1.2f, -0.2f, -0.35f + 0.15f * sqrt(3),					0.7f, 0.5f, 0.1f,

		1.5f, -0.25f - 0.05f * sqrt(2), -0.3f,					0.8f, 0.6f, 0.2f,
		1.2f, -0.25f - 0.05f * sqrt(2), -0.3f,					0.8f, 0.6f, 0.2f,
		1.5f, -0.2f, -0.25f - 0.15f * sqrt(3),					0.8f, 0.6f, 0.2f,

		1.5f, -0.2f, -0.25f - 0.15f * sqrt(3),					0.8f, 0.6f, 0.2f,
		1.2f, -0.2f, -0.25f - 0.15f * sqrt(3),					0.8f, 0.6f, 0.2f,
		1.2f, -0.25f - 0.05f * sqrt(2), -0.3f,					0.8f, 0.6f, 0.2f,

		1.5f, -0.2f, -0.25f - 0.15f * sqrt(3),					0.7f, 0.5f, 0.1f,
		1.5f, 0.0f, -0.25f - 0.15f * sqrt(3),					0.5f, 0.3f, 0.0f,
		1.2f, -0.2f, -0.25f - 0.15f * sqrt(3),					0.7f, 0.5f, 0.1f,

		1.2f, -0.2f, -0.25f - 0.15f * sqrt(3),					0.7f, 0.5f, 0.1f,
		1.2f, 0.0f, -0.25f - 0.15f * sqrt(3),					0.7f, 0.5f, 0.1f,
		1.5f, 0.0f, -0.25f - 0.15f * sqrt(3),					0.5f, 0.3f, 0.0f,

		1.5f, 0.05f + 0.05f * sqrt(2), -0.3f,					0.5f, 0.3f, 0.0f,
		1.2f, 0.05f + 0.05f * sqrt(2), -0.3f,					0.5f, 0.3f, 0.0f,
		1.5f, 0.0f, -0.25f - 0.15f * sqrt(3),					0.5f, 0.3f, 0.0f,

		1.5f, 0.0f, -0.25f - 0.15f * sqrt(3),					0.5f, 0.3f, 0.0f,
		1.2f, 0.0f, -0.25f - 0.15f * sqrt(3),					0.5f, 0.3f, 0.0f,
		1.2f, 0.05f + 0.05f * sqrt(2), -0.3f,					0.5f, 0.3f, 0.0f,

		1.2f, 0.0f, -0.35f + 0.15f * sqrt(3),					0.4f, 0.2f, 0.0f,
		1.5f, 0.0f, -0.35f + 0.15f * sqrt(3),					0.4f, 0.2f, 0.0f,
		1.5f, 0.05f + 0.05f * sqrt(2), -0.3f,				 	0.4f, 0.2f, 0.0f,

		1.5f, 0.05f + 0.05f * sqrt(2), -0.3f,					0.4f, 0.2f, 0.0f,
		1.2f, 0.05f + 0.05f * sqrt(2), -0.3f,					0.4f, 0.2f, 0.0f,
		1.2f, 0.0f, -0.35f + 0.15f * sqrt(3),					0.4f, 0.2f, 0.0f,

		//внешние грани
		1.2f, -0.25f, -0.3f + 0.15f * sqrt(3),					0.9f, 0.9f, 0.9f,
		1.2f, 0.05f, -0.3f + 0.15f * sqrt(3),					1.0f, 1.0f, 1.0f,
		1.2f, 0.0f, -0.35f + 0.15f * sqrt(3),					1.0f, 1.0f, 1.0f,

		1.2f, -0.2f, -0.35f + 0.15f * sqrt(3),					0.9f, 0.9f, 0.9f,
		1.2f, -0.25f, -0.3f + 0.15f * sqrt(3),					0.9f, 0.9f, 0.9f,
		1.2f, 0.0f, -0.35f + 0.15f * sqrt(3),					1.0f, 1.0f, 1.0f,

		1.2f, -0.2f, -0.35f + 0.15f * sqrt(3),					0.9f, 0.9f, 0.9f,
		1.2f, -0.4f, -0.3f,										0.9f, 0.9f, 0.9f,
		1.2f, -0.25f, -0.3f + 0.15f * sqrt(3),					0.9f, 0.9f, 0.9f,

		1.2f, -0.4f, -0.3f,										0.9f, 0.9f, 0.9f,
		1.2f, -0.25f - 0.05f * sqrt(2), -0.3f, 					0.9f, 0.9f, 0.9f,
		1.2f, -0.2f, -0.35f + 0.15f * sqrt(3),					0.9f, 0.9f, 0.9f,

		1.2f, -0.25f - 0.05f * sqrt(2), -0.3f, 					0.9f, 0.9f, 0.9f,
		1.2f, -0.4f, -0.3f,										0.9f, 0.9f, 0.9f,
		1.2f, -0.25f, -0.3f - 0.15f * sqrt(3),					0.9f, 0.9f, 0.9f,

		1.2f, -0.2f, -0.25f - 0.15f * sqrt(3),					0.9f, 0.9f, 0.9f,
		1.2f, -0.25f, -0.3f - 0.15f * sqrt(3),					0.9f, 0.9f, 0.9f,
		1.2f, -0.25f - 0.05f * sqrt(2), -0.3f, 					0.9f, 0.9f, 0.9f,

		1.2f, -0.25f, -0.3f - 0.15f * sqrt(3),					0.9f, 0.9f, 0.9f,
		1.2f, 0.05f, -0.3f - 0.15f * sqrt(3),					0.9f, 0.9f, 0.9f,
		1.2f, -0.2f, -0.25f - 0.15f * sqrt(3),					0.9f, 0.9f, 0.9f,

		1.2f, 0.05f, -0.3f - 0.15f * sqrt(3),					0.9f, 0.9f, 0.9f,
		1.2f, 0.0f, -0.25f - 0.15f * sqrt(3),					0.9f, 0.9f, 0.9f,
		1.2f, -0.2f, -0.25f - 0.15f * sqrt(3),					0.9f, 0.9f, 0.9f,

		1.2f, 0.05f + 0.05f * sqrt(2), -0.3f, 					1.0f, 1.0f, 1.0f,
		1.2f, 0.2f, -0.3f,										1.0f, 1.0f, 1.0f,
		1.2f, 0.05f, -0.3f - 0.15f * sqrt(3),					0.9f, 0.9f, 0.9f,

		1.2f, 0.0f, -0.25f - 0.15f * sqrt(3),					0.9f, 0.9f, 0.9f,
		1.2f, 0.05f, -0.3f - 0.15f * sqrt(3),					0.9f, 0.9f, 0.9f,
		1.2f, 0.05f + 0.05f * sqrt(2), -0.3f, 					1.0f, 1.0f, 1.0f,

		1.2f, 0.0f, -0.35f + 0.15f * sqrt(3),					1.0f, 1.0f, 1.0f,
		1.2f, 0.2f, -0.3f,										1.0f, 1.0f, 1.0f,
		1.2f, 0.05f, -0.3f + 0.15f * sqrt(3),					1.0f, 1.0f, 1.0f,

		1.2f, 0.2f, -0.3f,										1.0f, 1.0f, 1.0f,
		1.2f, 0.05f + 0.05f * sqrt(2), -0.3f, 					1.0f, 1.0f, 1.0f,
		1.2f, 0.0f, -0.35f + 0.15f * sqrt(3),					1.0f, 1.0f, 1.0f,
	};
	GLfloat roomVertices[] = {
		//пол комнаты
		-1.5f, 1.0f, -1.0f,					0.5f, 0.4f, 0.1f,
		1.5f, 1.0f, -1.0f,					0.5f, 0.4f, 0.1f,
		-1.5f, -3.0f, -1.0f,				1.0f, 0.8f, 0.5f,

		1.5f, 1.0f, -1.0f,					0.5f, 0.4f, 0.1f,
		1.5f, -3.0f, -1.0f,					1.0f, 0.8f, 0.5f,
		-1.5f, -3.0f, -1.0f,				1.0f, 0.8f, 0.5f,

		//левая стена
		-1.5f, 1.0f, -1.0f,					0.3f, 0.6f, 0.8f,
		-1.5f, -3.0f, -1.0f,				0.6f, 0.9f, 1.0f,
		-1.5f, -3.0f, 1.0f,					0.6f, 0.9f, 1.0f,

		-1.5f, 1.0f, 1.0f,					0.3f, 0.6f, 0.8f,
		-1.5f, -3.0f, 1.0f,					0.6f, 0.9f, 1.0f,
		-1.5f, 1.0f, -1.0f,					0.3f, 0.6f, 0.8f,

		//правая стена
		1.5f, 1.0f, -1.0f,					0.3f, 0.6f, 0.8f,
		1.5f, -3.0f, -1.0f,					0.6f, 0.9f, 1.0f,
		1.5f, -3.0f, 1.0f,					0.6f, 0.9f, 1.0f,

		1.5f, 1.0f, 1.0f,					0.3f, 0.6f, 0.8f,
		1.5f, -3.0f, 1.0f,					0.6f, 0.9f, 1.0f,
		1.5f, 1.0f, -1.0f,					0.3f, 0.6f, 0.8f,

		//потолок
		-1.5f, 1.0f, 1.0f,					0.6f, 0.6f, 0.6f,
		-1.5f, -3.0f, 1.0f,					1.0f, 1.0f, 1.0f,
		1.5f, 1.0f, 1.0f,					0.6f, 0.6f, 0.6f,

		1.5f, 1.0f, 1.0f,					0.6f, 0.6f, 0.6f,
		1.5f, -3.0f, 1.0f,					1.0f, 1.0f, 1.0f,
		-1.5f, -3.0f, 1.0f,					1.0f, 1.0f, 1.0f,

		//дальняя стена
		//внутренняя сторона
		//низ
		-1.5f, 1.0f, -1.0f,					0.2f, 0.5f, 0.7f,
		-1.5f, 1.0f, -0.3f,					0.2f, 0.5f, 0.7f,
		-0.75f, 1.0f, -0.3f,				0.4f, 0.7f, 0.9f,

		-0.75f, 1.0f, -1.0f,				0.2f, 0.5f, 0.7f,
		-1.5f, 1.0f, -1.0f,					0.2f, 0.5f, 0.7f,
		-0.75f, 1.0f, -0.3f,				0.4f, 0.7f, 0.9f,

		0.75f, 1.0f, -0.3f,					0.4f, 0.7f, 0.9f,
		1.5f, 1.0f, -0.3f,					0.2f, 0.5f, 0.7f,
		1.5f, 1.0f, -1.0f,					0.2f, 0.5f, 0.7f,

		0.75f, 1.0f, -1.0f,					0.2f, 0.5f, 0.7f,
		1.5f, 1.0f, -1.0f,					0.2f, 0.5f, 0.7f,
		0.75f, 1.0f, -0.3f,					0.4f, 0.7f, 0.9f,

		-0.75f, 1.0f, -0.3f,				0.4f, 0.7f, 0.9f,
		-0.75f, 1.0f, -1.0f,				0.2f, 0.5f, 0.7f,
		0.75f, 1.0f, -1.0f,					0.2f, 0.5f, 0.7f,

		0.75f, 1.0f, -1.0f,					0.2f, 0.5f, 0.7f,
		0.75f, 1.0f, -0.3f,					0.4f, 0.7f, 0.9f,
		-0.75f, 1.0f, -0.3f,				0.4f, 0.7f, 0.9f,

		//левая сторона
		-1.5f, 1.0f, 1.0f,					0.2f, 0.5f, 0.7f,
		-1.5f, 1.0f, -0.3f,					0.2f, 0.5f, 0.7f,
		-0.75f, 1.0f, 1.0f,					0.2f, 0.5f, 0.7f,

		-0.75f, 1.0f, 1.0f,					0.2f, 0.5f, 0.7f,
		-0.75f, 1.0f, -0.3f,				0.4f, 0.7f, 0.9f,
		-1.5f, 1.0f, -0.3f,					0.2f, 0.5f, 0.7f,

		//правая сторона
		0.75f, 1.0f, 1.0f,					0.2f, 0.5f, 0.7f,
		0.75f, 1.0f, -0.3f,					0.4f, 0.7f, 0.9f,
		1.5f, 1.0f, -0.3f,					0.2f, 0.5f, 0.7f,

		1.5f, 1.0f, 1.0f,					0.2f, 0.5f, 0.7f,
		1.5f, 1.0f, -0.3f,					0.2f, 0.5f, 0.7f,
		0.75f, 1.0f, 1.0f,					0.2f, 0.5f, 0.7f,

		//верх и центр
		//левая сторона
		-0.75f, 1.0f, 1.0f,					0.2f, 0.5f, 0.7f,
		-0.75f, 1.0f, -0.3f,				0.4f, 0.7f, 0.9f,
		-0.38f * sqrt(3), 1.0f, 0.1f,		0.4f, 0.7f, 0.9f,

		-0.38f * sqrt(3), 1.0f, 0.1f,		0.4f, 0.7f, 0.9f,
		-0.38f, 1.0f, 0.2f * sqrt(3),		0.4f, 0.7f, 0.9f,
		-0.75, 1.0f, 1.0f,					0.2f, 0.5f, 0.7f,

		-0.38f, 1.0f, 0.2f * sqrt(3),		0.4f, 0.7f, 0.9f,
		-0.75, 1.0f, 1.0f,					0.2f, 0.5f, 0.7f,
		0.0f, 1.0f, 0.4f,					0.4f, 0.7f, 0.9f,

		//правая сторона
		0.75f, 1.0f, 1.0f,					0.2f, 0.5f, 0.7f,
		0.75f, 1.0f, -0.3f,					0.4f, 0.7f, 0.9f,
		0.38f * sqrt(3), 1.0f, 0.1f,		0.4f, 0.7f, 0.9f,

		0.38f * sqrt(3), 1.0f, 0.1f,		0.4f, 0.7f, 0.9f,
		0.38f, 1.0f, 0.2f * sqrt(3),		0.4f, 0.7f, 0.9f,
		0.75, 1.0f, 1.0f,					0.2f, 0.5f, 0.7f,

		0.38f, 1.0f, 0.2f * sqrt(3),		0.4f, 0.7f, 0.9f,
		0.75, 1.0f, 1.0f,					0.2f, 0.5f, 0.7f,
		0.0f, 1.0f, 0.4f,					0.4f, 0.7f, 0.9f,

		//середина верха
		0.75f, 1.0f, 1.0f,					0.2f, 0.5f, 0.7f,
		-0.75f, 1.0f, 1.0f,					0.2f, 0.5f, 0.7f,
		0.0f, 1.0f, 0.4f,					0.4f, 0.7f, 0.9f,



		//внешняя сторона стены
		//низ
		-1.5f, 1.3f, -1.0f,					0.6f, 0.0f, 0.1f,
		-1.5f, 1.3f, -0.3f,					0.6f, 0.0f, 0.1f,
		1.5f, 1.3f, -1.0f,					0.6f, 0.0f, 0.1f,

		-1.5f, 1.3f, -0.3f,					0.6f, 0.0f, 0.1f,
		1.5f, 1.3f, -0.3f,					0.6f, 0.0f, 0.1f,
		1.5f, 1.3f, -1.0f,					0.6f, 0.0f, 0.1f,

		//левая сторона
		-1.5f, 1.3f, 1.0f,					0.6f, 0.0f, 0.1f,
		-1.5f, 1.3f, -0.3f,					0.6f, 0.0f, 0.1f,
		-0.75f, 1.3f, 1.0f,					0.6f, 0.0f, 0.1f,

		-0.75f, 1.3f, 1.0f,					0.6f, 0.0f, 0.1f,
		-0.75f, 1.3f, -0.3f,				0.6f, 0.0f, 0.1f,
		-1.5f, 1.3f, -0.3f,					0.6f, 0.0f, 0.1f,

		//правая сторона
		0.75f, 1.3f, 1.0f,					0.6f, 0.0f, 0.1f,
		0.75f, 1.3f, -0.3f,					0.6f, 0.0f, 0.1f,
		1.5f, 1.3f, -0.3f,					0.6f, 0.0f, 0.1f,

		1.5f, 1.3f, 1.0f,					0.6f, 0.0f, 0.1f,
		1.5f, 1.3f, -0.3f,					0.6f, 0.0f, 0.1f,
		0.75f, 1.3f, 1.0f,					0.6f, 0.0f, 0.1f,

		//верх и центр
		//левая сторона
		-0.75f, 1.3f, 1.0f,					0.6f, 0.0f, 0.1f,
		-0.75f, 1.3f, -0.3f,				0.6f, 0.0f, 0.1f,
		-0.38f * sqrt(3), 1.3f, 0.1f,		0.6f, 0.0f, 0.1f,

		-0.38f * sqrt(3), 1.3f, 0.1f,		0.6f, 0.0f, 0.1f,
		-0.38f, 1.3f, 0.2f * sqrt(3),		0.6f, 0.0f, 0.1f,
		-0.75, 1.3f, 1.0f,					0.6f, 0.0f, 0.1f,

		-0.38f, 1.3f, 0.2f * sqrt(3),		0.6f, 0.0f, 0.1f,
		-0.75, 1.3f, 1.0f,					0.6f, 0.0f, 0.1f,
		0.0f, 1.3f, 0.4f,					0.6f, 0.0f, 0.1f,

		//правая сторона
		0.75f, 1.3f, 1.0f,					0.6f, 0.0f, 0.1f,
		0.75f, 1.3f, -0.3f,					0.6f, 0.0f, 0.1f,
		0.38f * sqrt(3), 1.3f, 0.1f,		0.6f, 0.0f, 0.1f,

		0.38f * sqrt(3), 1.3f, 0.1f,		0.6f, 0.0f, 0.1f,
		0.38f, 1.3f, 0.2f * sqrt(3),		0.6f, 0.0f, 0.1f,
		0.75, 1.3f, 1.0f,					0.6f, 0.0f, 0.1f,

		0.38f, 1.3f, 0.2f * sqrt(3),		0.6f, 0.0f, 0.1f,
		0.75, 1.3f, 1.0f,					0.6f, 0.0f, 0.1f,
		0.0f, 1.3f, 0.4f,					0.6f, 0.0f, 0.1f,

		//середина верха
		0.75f, 1.3f, 1.0f,					0.6f, 0.0f, 0.1f,
		-0.75f, 1.3f, 1.0f,					0.6f, 0.0f, 0.1f,
		0.0f, 1.3f, 0.4f,					0.6f, 0.0f, 0.1f,


		//грани соединения
		1.5f, 1.3f, 1.0f,					0.3f, 0.3f, 0.3f,
		1.5f, 1.3f, -1.0f,					0.3f, 0.3f, 0.3f,
		1.5f, 1.0f, 1.0f,					0.3f, 0.3f, 0.3f,

		1.5f, 1.3f, -1.0f,					0.3f, 0.3f, 0.3f,
		1.5f, 1.0f, 1.0f,					0.3f, 0.3f, 0.3f,
		1.5f, 1.0f, -1.0f,					0.3f, 0.3f, 0.3f,

		-1.5f, 1.3f, 1.0f,					0.3f, 0.3f, 0.3f,
		-1.5f, 1.3f, -1.0f,					0.3f, 0.3f, 0.3f,
		-1.5f, 1.0f, 1.0f,					0.3f, 0.3f, 0.3f,

		-1.5f, 1.3f, -1.0f,					0.3f, 0.3f, 0.3f,
		-1.5f, 1.0f, 1.0f,					0.3f, 0.3f, 0.3f,
		-1.5f, 1.0f, -1.0f,					0.3f, 0.3f, 0.3f,

		1.5f, 1.3f, 1.0f,					0.3f, 0.3f, 0.3f,
		-1.5f, 1.3f, 1.0f,					0.3f, 0.3f, 0.3f,
		-1.5f, 1.0f, 1.0f,					0.3f, 0.3f, 0.3f,

		1.5f, 1.3f, 1.0f,					0.3f, 0.3f, 0.3f,
		1.5f, 1.0f, 1.0f,					0.3f, 0.3f, 0.3f,
		-1.5f, 1.0f, 1.0f,					0.3f, 0.3f, 0.3f,

		1.5f, 1.3f, -1.0f,					0.3f, 0.3f, 0.3f,
		-1.5f, 1.3f, -1.0f,					0.3f, 0.3f, 0.3f,
		-1.5f, 1.0f, -1.0f,					0.3f, 0.3f, 0.3f,

		1.5f, 1.3f, -1.0f,					0.3f, 0.3f, 0.3f,
		1.5f, 1.0f, -1.0f,					0.3f, 0.3f, 0.3f,
		-1.5f, 1.0f, -1.0f,					0.3f, 0.3f, 0.3f,



		//подоконник
		//левая половина
		-0.75f, 1.3f, -0.3f,				1.0f, 1.0f, 1.0f,
		-0.75f, 1.0f, -0.3f,				0.5f, 0.8f, 1.0f,
		-0.38f * sqrt(3), 1.3f, 0.1f,		1.0f, 1.0f, 1.0f,

		-0.38f * sqrt(3), 1.3f, 0.1f,		1.0f, 1.0f, 1.0f,
		-0.38f * sqrt(3), 1.0f, 0.1f ,		0.5f, 0.8f, 1.0f,
		-0.75, 1.0f, -0.3f,					0.5f, 0.8f, 1.0f,

		-0.38f * sqrt(3), 1.3f, 0.1f,		1.0f, 1.0f, 1.0f,
		-0.38f * sqrt(3), 1.0f, 0.1f,		0.5f, 0.8f, 1.0f,
		-0.38f, 1.3f, 0.2f * sqrt(3),		1.0f, 1.0f, 1.0f,

		-0.38f, 1.3f, 0.2f * sqrt(3),		1.0f, 1.0f, 1.0f,
		-0.38f, 1.0f, 0.2f * sqrt(3),		0.5f, 0.8f, 1.0f,
		-0.38f * sqrt(3), 1.0f, 0.1f,		0.5f, 0.8f, 1.0f,

		-0.38f, 1.3f, 0.2f * sqrt(3),		1.0f, 1.0f, 1.0f,
		-0.38f, 1.0f, 0.2f * sqrt(3),		0.5f, 0.8f, 1.0f,
		0.0f, 1.3f, 0.4f,					1.0f, 1.0f, 1.0f,

		0.0f, 1.3f, 0.4f,					1.0f, 1.0f, 1.0f,
		0.0f, 1.0f, 0.4f,					0.5f, 0.8f, 1.0f,
		-0.38f, 1.0f, 0.2f * sqrt(3),		0.5f, 0.8f, 1.0f,

		//правая половина
		0.75f, 1.3f, -0.3f,					1.0f, 1.0f, 1.0f,
		0.75f, 1.0f, -0.3f,					0.5f, 0.8f, 1.0f,
		0.38f * sqrt(3), 1.3f, 0.1f,		1.0f, 1.0f, 1.0f,

		0.38f * sqrt(3), 1.3f, 0.1f,		1.0f, 1.0f, 1.0f,
		0.38f * sqrt(3), 1.0f, 0.1f ,		0.5f, 0.8f, 1.0f,
		0.75, 1.0f, -0.3f,					0.5f, 0.8f, 1.0f,

		0.38f * sqrt(3), 1.3f, 0.1f,		1.0f, 1.0f, 1.0f,
		0.38f * sqrt(3), 1.0f, 0.1f,		0.5f, 0.8f, 1.0f,
		0.38f, 1.3f, 0.2f * sqrt(3),		1.0f, 1.0f, 1.0f,

		0.38f, 1.3f, 0.2f * sqrt(3),		1.0f, 1.0f, 1.0f,
		0.38f, 1.0f, 0.2f * sqrt(3),		0.5f, 0.8f, 1.0f,
		0.38f * sqrt(3), 1.0f, 0.1f,		0.5f, 0.8f, 1.0f,

		0.38f, 1.3f, 0.2f * sqrt(3),		1.0f, 1.0f, 1.0f,
		0.38f, 1.0f, 0.2f * sqrt(3),		0.5f, 0.8f, 1.0f,
		0.0f, 1.3f, 0.4f,					1.0f, 1.0f, 1.0f,

		0.0f, 1.3f, 0.4f,					1.0f, 1.0f, 1.0f,
		0.0f, 1.0f, 0.4f,					0.5f, 0.8f, 1.0f,
		0.38f, 1.0f, 0.2f * sqrt(3),		0.5f, 0.8f, 1.0f,

		//опорная часть
		0.75f, 1.0f, -0.3f,					0.5f, 0.8f, 1.0f,
		0.75f, 1.3f, -0.3f,					1.0f, 1.0f, 1.0f,
		-0.75f, 1.3f, -0.3f,				1.0f, 1.0f, 1.0f,

		-0.75f, 1.3f, -0.3f,				1.0f, 1.0f, 1.0f,
		-0.75f, 1.0f, -0.3f,				0.5f, 0.8f, 1.0f,
		0.75f, 1.0f, -0.3f,					0.5f, 0.8f, 1.0f,
	};
	GLfloat windowVertices[] = {
		//окно (создание фрагментов по часовой стрелке)
		//стекло
		//левые фрагменты
		-0.66f, 1.299f, -0.25f,				0.3f, 0.6f, 0.8f,
		-0.61f, 1.299f, -0.05f,				0.3f, 0.6f, 0.8f,
		-0.2f, 1.299f, -0.25f,				0.3f, 0.6f, 0.8f,

		-0.55f, 1.299f, 0.1f,					0.3f, 0.6f, 0.8f,
		-0.14f, 1.299f, -0.18f,				0.3f, 0.6f, 0.8f,
		-0.4f, 1.299f, 0.22f,					0.3f, 0.6f, 0.8f,

		-0.05f, 1.299f, -0.1f,				0.3f, 0.6f, 0.8f,
		-0.05f, 1.299f, 0.33f,				0.3f, 0.6f, 0.8f,
		-0.25f, 1.299f, 0.3f,					0.3f, 0.6f, 0.8f,

		//правые фрагменты
		0.66f, 1.299f, -0.25f,				0.3f, 0.6f, 0.8f,
		0.61f, 1.299f, -0.05f,				0.3f, 0.6f, 0.8f,
		0.2f, 1.299f, -0.25f,					0.3f, 0.6f, 0.8f,

		0.55f, 1.299f, 0.1f,					0.3f, 0.6f, 0.8f,
		0.14f, 1.299f, -0.18f,				0.3f, 0.6f, 0.8f,
		0.4f, 1.299f, 0.22f,					0.3f, 0.6f, 0.8f,

		0.05f, 1.299f, -0.1f,					0.3f, 0.6f, 0.8f,
		0.05f, 1.299f, 0.33f,					0.3f, 0.6f, 0.8f,
		0.25f, 1.299f, 0.3f,					0.3f, 0.6f, 0.8f,


		//части рамы
		//левая половина рамы
		-0.75f, 1.3f, -0.3f,				0.5f, 0.3f, 0.1f,
		-0.38f * sqrt(3), 1.3f, 0.1f,		0.5f, 0.3f, 0.1f,
		0.0f, 1.3f, -0.3f,					0.5f, 0.3f, 0.1f,

		-0.38f * sqrt(3), 1.3f, 0.1f,		0.5f, 0.3f, 0.1f,
		-0.38f, 1.3f, 0.2f * sqrt(3),		0.5f, 0.3f, 0.1f,
		0.0f, 1.3f, -0.3f,					0.5f, 0.3f, 0.1f,

		-0.38f, 1.3f, 0.2f * sqrt(3),		0.5f, 0.3f, 0.1f,
		0.0f, 1.3f, 0.4f,					0.5f, 0.3f, 0.1f,
		0.0f, 1.3f, -0.3f,					0.5f, 0.3f, 0.1f,

		//правая половина рамы
		0.75f, 1.3f, -0.3f,					0.5f, 0.3f, 0.1f,
		0.38f * sqrt(3), 1.3f, 0.1f,		0.5f, 0.3f, 0.1f,
		0.0f, 1.3f, -0.3f,					0.5f, 0.3f, 0.1f,

		0.38f * sqrt(3), 1.3f, 0.1f,		0.5f, 0.3f, 0.1f,
		0.38f, 1.3f, 0.2f * sqrt(3),		0.5f, 0.3f, 0.1f,
		0.0f, 1.3f, -0.3f,					0.5f, 0.3f, 0.1f,

		0.38f, 1.3f, 0.2f * sqrt(3),		0.5f, 0.3f, 0.1f,
		0.0f, 1.3f, 0.4f,					0.5f, 0.3f, 0.1f,
		0.0f, 1.3f, -0.3f,					0.5f, 0.3f, 0.1f
	};

	//создание VBO и VAO для массивов вершин
	GLuint tableVAO;
	glGenVertexArrays(1, &tableVAO);
	glBindVertexArray(tableVAO);
	GLuint tableVBO;
	glGenBuffers(1, &tableVBO);
	glBindBuffer(GL_ARRAY_BUFFER, tableVBO);
	glBufferData(GL_ARRAY_BUFFER, sizeof(tableVertices), tableVertices, GL_STATIC_DRAW);
	bindVertexAttr();
	glBindVertexArray(0);

	GLuint shelfVAO1;
	glGenVertexArrays(1, &shelfVAO1);
	glBindVertexArray(shelfVAO1);
	GLuint shelfVBO1;
	glGenBuffers(1, &shelfVBO1);
	glBindBuffer(GL_ARRAY_BUFFER, shelfVBO1);
	glBufferData(GL_ARRAY_BUFFER, sizeof(shelfVertices1), shelfVertices1, GL_STATIC_DRAW);
	bindVertexAttr();
	glBindVertexArray(0);

	GLuint shelfVAO2;
	glGenVertexArrays(1, &shelfVAO2);
	glBindVertexArray(shelfVAO2);
	GLuint shelfVBO2;
	glGenBuffers(1, &shelfVBO2);
	glBindBuffer(GL_ARRAY_BUFFER, shelfVBO2);
	glBufferData(GL_ARRAY_BUFFER, sizeof(shelfVertices2), shelfVertices2, GL_STATIC_DRAW);
	bindVertexAttr();
	glBindVertexArray(0);

	GLuint shelfVAO3;
	glGenVertexArrays(1, &shelfVAO3);
	glBindVertexArray(shelfVAO3);
	GLuint shelfVBO3;
	glGenBuffers(1, &shelfVBO3);
	glBindBuffer(GL_ARRAY_BUFFER, shelfVBO3);
	glBufferData(GL_ARRAY_BUFFER, sizeof(shelfVertices3), shelfVertices3, GL_STATIC_DRAW);
	bindVertexAttr();
	glBindVertexArray(0);

	GLuint roomVAO;
	glGenVertexArrays(1, &roomVAO);
	glBindVertexArray(roomVAO);
	GLuint roomVBO;
	glGenBuffers(1, &roomVBO);
	glBindBuffer(GL_ARRAY_BUFFER, roomVBO);
	glBufferData(GL_ARRAY_BUFFER, sizeof(roomVertices), roomVertices, GL_STATIC_DRAW);
	bindVertexAttr();
	glBindVertexArray(0);

	GLuint windowVAO;
	glGenVertexArrays(1, &windowVAO);
	glBindVertexArray(windowVAO);
	GLuint windowVBO;
	glGenBuffers(1, &windowVBO);
	glBindBuffer(GL_ARRAY_BUFFER, windowVBO);
	glBufferData(GL_ARRAY_BUFFER, sizeof(windowVertices), windowVertices, GL_STATIC_DRAW);
	bindVertexAttr();
	glBindVertexArray(0);

	//проверка глубины обрабатываемых фрагментов относительно данных в буфере
	glEnable(GL_DEPTH_TEST);

	while (!glfwWindowShouldClose(window)) {
		//проверка на вызов событий
		glfwPollEvents();
		//цвет "очистки"
		glClearColor(1.0f, 1.0f, 1.0f, 0.0f);
		//очистка цветового и глубинного буферов от старых данных
		glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
		//включение шейдерной программы
		shader.use();

		//матрица модели
		glm::mat4 model;
		model = glm::rotate(model, -90.0f, glm::vec3(1.0f, 0.0f, 0.0f));
		model = glm::rotate(model, 20.0f, glm::vec3(0.0f, 0.0f, 1.0f));
		//матрица вида
		glm::mat4 view;
		view = glm::translate(view, glm::vec3(0.0f, 0.0f, -2.0f));
		//матрица проекцииB
		glm::mat4 projection;
		projection = glm::perspective(60.0f, (GLfloat)W_WIDTH / (GLfloat)W_HEIGHT, 0.1f, 100.0f);
		//использование матрицы модели в шейдерной программе
		GLint modelLoc = glGetUniformLocation(shader.Program, "model");
		glUniformMatrix4fv(modelLoc, 1, GL_FALSE, glm::value_ptr(model));
		//использование матрицы вида в шейдерной программе
		GLint viewLoc = glGetUniformLocation(shader.Program, "view");
		glUniformMatrix4fv(viewLoc, 1, GL_FALSE, glm::value_ptr(view));
		//использование матрицы проекции в шейдерной программе
		GLint projLoc = glGetUniformLocation(shader.Program, "projection");
		glUniformMatrix4fv(projLoc, 1, GL_FALSE, glm::value_ptr(projection));

		//отрисовка стола
		glBindVertexArray(tableVAO);
		glDrawArrays(GL_TRIANGLES, 0, sizeof(tableVertices) / 24);
		glBindVertexArray(0);

		//отрисовка дальней тумбы
		glBindVertexArray(shelfVAO1);
		glDrawArrays(GL_TRIANGLES, 0, sizeof(shelfVertices1) / 24);
		glBindVertexArray(0);

		//отрисовка ближней тумбы
		glBindVertexArray(shelfVAO2);
		glDrawArrays(GL_TRIANGLES, 0, sizeof(shelfVertices2) / 24);
		glBindVertexArray(0);

		//отрисовка верхней тумбы
		glBindVertexArray(shelfVAO3);
		glDrawArrays(GL_TRIANGLES, 0, sizeof(shelfVertices3) / 24);
		glBindVertexArray(0);

		//отрисовка комнаты
		glBindVertexArray(roomVAO);
		glDrawArrays(GL_TRIANGLES, 0, sizeof(roomVertices) / 24);
		glBindVertexArray(0);

		//отрисовка окна
		glBindVertexArray(windowVAO);
		glDrawArrays(GL_TRIANGLES, 0, sizeof(windowVertices) / 24);
		glBindVertexArray(0);

		//смена результирующего и отрисовывающего буферов
		glfwSwapBuffers(window);
	}

	//очистка ресурсов
	glfwTerminate();
	return 0;
}

//привязка вершинных атрибутов
void bindVertexAttr() {
	glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 6 * sizeof(GLfloat), (void*)0);
	glEnableVertexAttribArray(0);
	glVertexAttribPointer(1, 3, GL_FLOAT, GL_FALSE, 6 * sizeof(GLfloat), (void*)(3 * sizeof(GLfloat)));
	glEnableVertexAttribArray(1);
}
